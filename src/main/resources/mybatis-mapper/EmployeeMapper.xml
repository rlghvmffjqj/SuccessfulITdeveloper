<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="employee">
	<resultMap type="com.certificate.pass.vo.Employee" id="employee"></resultMap>
	<resultMap type="com.certificate.pass.vo.Visitor" id="visitor"></resultMap>
	
	<select id="getEmployeeCount" resultType="_int">
		SELECT COUNT(*) FROM employee e INNER JOIN users u
		ON e.employeeId = u.usersId
			<include refid="sqlEmployee" />
	</select>
	
	<select id="getEmployee" resultMap="employee" parameterType="string">
		SELECT *
    	FROM
    	(
    		SELECT ROW_NUMBER() OVER(ORDER BY ${sidx} ${sord}) RowNo, a.*
    		FROM (
				SELECT e.*, u.usersRole FROM employee e INNER JOIN users u
				ON e.employeeId = u.usersId
					<include refid="sqlEmployee" />
			) a
		) b
    	WHERE b.RowNo between (1+(${page} - 1 ) * ${rows}) and (${page} * ${rows});
	</select>
	
	<update id="loginLimit">
		UPDATE employee SET employeeStatus='제한', employeeModifier=#{employeeModifier}, employeeModifiedDate=#{employeeModifiedDate} 
		WHERE employeeId = #{employeeId}
	</update>
	
	<update id="loginUnLimit">
		UPDATE employee SET employeeStatus='정상', employeeModifier=#{employeeModifier}, employeeModifiedDate=#{employeeModifiedDate} 
		WHERE employeeId = #{employeeId}
	</update>
	
	<select id="getUsersRole" parameterType="string" resultType="string">
		SELECT usersRole FROM users WHERE usersId = #{usersId};
	</select> 
	
	<update id="updateEmployee">
		UPDATE employee SET employeeName=#{employeeName}, employeeEmail=#{employeeEmail}, employeeStatus=#{employeeStatus}, employeeModifier=#{employeeModifier}, employeeModifiedDate=#{employeeModifiedDate}
		WHERE employeeId=#{employeeId};
	</update>
	
	<update id="updateUsers">
		UPDATE users SET usersRole=#{usersRole} WHERE usersId=#{employeeId};
	</update>
	
	<delete id="deleteEmployee" parameterType="string">
		DELETE FROM employee WHERE employeeId = #{employeeId};
	</delete>
	
	<delete id="deleteUsers" parameterType="string">
		DELETE FROM users WHERE usersId=#{usersId};
	</delete>
	
	<select id="getEmployeeOne" parameterType="string" resultMap="employee">
		SELECT * FROM employee WHERE employeeId = #{employeeId};
	</select>
	
	<select id="getVisitor" parameterType="string" resultMap="visitor">
		SELECT * FROM visitor WHERE visitorIp = #{visitorIp} AND visitorDate = #{visitorDate};
	</select>
	
	<insert id="insertVisitor" parameterType="string">
		INSERT INTO visitor(visitorIp,visitorDate) VALUES(#{visitorIp},#{visitorDate});
	</insert>
	
	<!-- ==================================================================================== -->
	
	<sql id="sqlEmployee">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="employeeId != null and employeeId != ''">
				AND e.employeeId LIKE CONCAT('%',#{employeeId},'%')
			</if>
			<if test="employeeName != null and employeeName != ''">
				AND e.employeeName LIKE CONCAT('%',#{employeeName},'%')
			</if>
			<if test="employeeEmail != null and employeeEmail != ''">
				AND e.employeeEmail LIKE CONCAT('%',#{employeeEmail},'%')
			</if>
			<if test="employeeStatus != null and employeeStatus != ''">
				AND e.employeeStatus LIKE CONCAT('%',#{employeeStatus},'%')
			</if>
			<if test="employeePhone != null and employeePhone != ''">
				AND e.employeePhone LIKE CONCAT('%',#{employeePhone},'%')
			</if>
		</trim>
	</sql>
</mapper>